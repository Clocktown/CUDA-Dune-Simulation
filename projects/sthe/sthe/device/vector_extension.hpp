#pragma once

#include "function_qualifier.hpp"
#include <vector_types.h>
#include <vector_functions.h>

#ifndef __CUDACC_RTC__
#   include <cmath>

    CU_INLINE CU_HOST_DEVICE int min(const int a, const int b);
    CU_INLINE CU_HOST_DEVICE unsigned int min(const unsigned int a, const unsigned int b);
    CU_INLINE CU_HOST_DEVICE int max(const int a, const int b);
    CU_INLINE CU_HOST_DEVICE unsigned int max(const unsigned int a, const unsigned int b);
    CU_INLINE CU_HOST_DEVICE float rsqrtf(const float a);
#endif

CU_INLINE CU_HOST_DEVICE int sign(const int a);
CU_INLINE CU_HOST_DEVICE float sign(const float a);
CU_INLINE CU_HOST_DEVICE int clamp(const int a, const int x, const int y);
CU_INLINE CU_HOST_DEVICE unsigned int clamp(const unsigned int a, const unsigned int x, const unsigned int y);
CU_INLINE CU_HOST_DEVICE float clamp(const float a, const float x, const float y);
CU_INLINE CU_HOST_DEVICE float lerp(const float a, const float b, const float t);
CU_INLINE CU_HOST_DEVICE float bilerp(const float a00, const float a10, const float a01, const float a11, const float u, const float v);

CU_INLINE CU_HOST_DEVICE int2 make_int2(const uint2& a);
CU_INLINE CU_HOST_DEVICE int2 make_int2(const float2& a);
CU_INLINE CU_HOST_DEVICE int2 make_int2(const int a);
CU_INLINE CU_HOST_DEVICE int2 make_int2(const int3& a);
CU_INLINE CU_HOST_DEVICE int2 make_int2(const int4& a);
CU_INLINE CU_HOST_DEVICE bool operator==(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE void operator++(int2& a);
CU_INLINE CU_HOST_DEVICE void operator+=(int2& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator+=(int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator+(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int2 operator+(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator+(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE void operator--(int2& a);
CU_INLINE CU_HOST_DEVICE void operator-=(int2& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator-=(int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator-(const int2& a);
CU_INLINE CU_HOST_DEVICE int2 operator-(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int2 operator-(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator-(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE void operator*=(int2& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator*=(int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator*(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int2 operator*(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator*(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE void operator/=(int2& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator/=(int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator/(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int2 operator/(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 operator/(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 abs(const int2& a);
CU_INLINE CU_HOST_DEVICE int2 min(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int2 min(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 min(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 max(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int2 max(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 max(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int2 sign(const int2& a);
CU_INLINE CU_HOST_DEVICE int2 clamp(const int2& a, const int x, const int y);
CU_INLINE CU_HOST_DEVICE int2 clamp(const int2& a, const int2& x, const int2& y);
CU_INLINE CU_HOST_DEVICE int dot(const int2& a, const int2& b);

CU_INLINE CU_HOST_DEVICE int3 make_int3(const uint3& a);
CU_INLINE CU_HOST_DEVICE int3 make_int3(const float3& a);
CU_INLINE CU_HOST_DEVICE int3 make_int3(const int a);
CU_INLINE CU_HOST_DEVICE int3 make_int3(const int2& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 make_int3(const int a, const int2& b);
CU_INLINE CU_HOST_DEVICE int3 make_int3(const int4& a);
CU_INLINE CU_HOST_DEVICE bool operator==(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE void operator++(int3& a);
CU_INLINE CU_HOST_DEVICE void operator+=(int3& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator+=(int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator+(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 operator+(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator+(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE void operator--(int3& a);
CU_INLINE CU_HOST_DEVICE void operator-=(int3& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator-=(int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator-(const int3& a);
CU_INLINE CU_HOST_DEVICE int3 operator-(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 operator-(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator-(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE void operator*=(int3& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator*=(int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator*(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 operator*(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator*(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE void operator/=(int3& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator/=(int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator/(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 operator/(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 operator/(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 abs(const int3& a);
CU_INLINE CU_HOST_DEVICE int3 min(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 min(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 min(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 max(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int3 max(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 max(const int3& a, const int3& b);
CU_INLINE CU_HOST_DEVICE int3 sign(const int3& a);
CU_INLINE CU_HOST_DEVICE int3 clamp(const int3& a, const int x, const int y);
CU_INLINE CU_HOST_DEVICE int3 clamp(const int3& a, const int3& x, const int3& y);
CU_INLINE CU_HOST_DEVICE int dot(const int3& a, const int3& b);

CU_INLINE CU_HOST_DEVICE int4 make_int4(const uint4& a);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const float4& a);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int a);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int2& a, const int b, const int c);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int a, const int2& b, const int c);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int a, const int b, const int2& c);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int2& a, const int2& b);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int3& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 make_int4(const int a, const int3& b);
CU_INLINE CU_HOST_DEVICE bool operator==(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE void operator++(int4& a);
CU_INLINE CU_HOST_DEVICE void operator+=(int4& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator+=(int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator+(const int4& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 operator+(const int a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator+(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE void operator--(int4& a);
CU_INLINE CU_HOST_DEVICE void operator-=(int4& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator-=(int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator-(const int4& a);
CU_INLINE CU_HOST_DEVICE int4 operator-(const int4& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 operator-(const int a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator-(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE void operator*=(int4& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator*=(int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator*(const int4& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 operator*(const int a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator*(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE void operator/=(int4& a, const int b);
CU_INLINE CU_HOST_DEVICE void operator/=(int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator/(const int4& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 operator/(const int a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 operator/(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 abs(const int4& a);
CU_INLINE CU_HOST_DEVICE int4 min(const int4& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 min(const int a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 min(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 max(const int4& a, const int b);
CU_INLINE CU_HOST_DEVICE int4 max(const int a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 max(const int4& a, const int4& b);
CU_INLINE CU_HOST_DEVICE int4 sign(const int4& a);
CU_INLINE CU_HOST_DEVICE int4 clamp(const int4& a, const int x, const int y);
CU_INLINE CU_HOST_DEVICE int4 clamp(const int4& a, const int4& x, const int4& y);
CU_INLINE CU_HOST_DEVICE int dot(const int4& a, const int4& b);

CU_INLINE CU_HOST_DEVICE uint2 make_uint2(const int2& a);
CU_INLINE CU_HOST_DEVICE uint2 make_uint2(const float2& a);
CU_INLINE CU_HOST_DEVICE uint2 make_uint2(const unsigned int a);
CU_INLINE CU_HOST_DEVICE uint2 make_uint2(const uint3& a);
CU_INLINE CU_HOST_DEVICE uint2 make_uint2(const uint4& a);
CU_INLINE CU_HOST_DEVICE bool operator==(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE void operator++(uint2& a);
CU_INLINE CU_HOST_DEVICE void operator+=(uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator+=(uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator+(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint2 operator+(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator+(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE void operator--(uint2& a);
CU_INLINE CU_HOST_DEVICE void operator-=(uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator-=(uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator-(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint2 operator-(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator-(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE void operator*=(uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator*=(uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator*(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint2 operator*(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator*(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE void operator/=(uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator/=(uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator/(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint2 operator/(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 operator/(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 min(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint2 min(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 min(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 max(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint2 max(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 max(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint2 clamp(const uint2& a, const unsigned int x, const unsigned int y);
CU_INLINE CU_HOST_DEVICE uint2 clamp(const uint2& a, const uint2& x, const uint2& y);
CU_INLINE CU_HOST_DEVICE unsigned int dot(const uint2& a, const uint2& b);

CU_INLINE CU_HOST_DEVICE uint3 make_uint3(const int3& a);
CU_INLINE CU_HOST_DEVICE uint3 make_uint3(const float3& a);
CU_INLINE CU_HOST_DEVICE uint3 make_uint3(const unsigned int a);
CU_INLINE CU_HOST_DEVICE uint3 make_uint3(const uint2& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 make_uint3(const unsigned int a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint3 make_uint3(const uint4& a);
CU_INLINE CU_HOST_DEVICE bool operator==(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE void operator++(uint3& a);
CU_INLINE CU_HOST_DEVICE void operator+=(uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator+=(uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator+(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 operator+(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator+(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE void operator--(uint3& a);
CU_INLINE CU_HOST_DEVICE void operator-=(uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator-=(uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator-(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 operator-(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator-(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE void operator*=(uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator*=(uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator*(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 operator*(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator*(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE void operator/=(uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator/=(uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator/(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 operator/(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 operator/(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 min(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 min(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 min(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 max(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint3 max(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 max(const uint3& a, const uint3& b);
CU_INLINE CU_HOST_DEVICE uint3 clamp(const uint3& a, const unsigned int x, const unsigned int y);
CU_INLINE CU_HOST_DEVICE uint3 clamp(const uint3& a, const uint3& x, const uint3& y);
CU_INLINE CU_HOST_DEVICE unsigned int dot(const uint3& a, const uint3& b);

CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const int4& a);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const float4& a);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const unsigned int a);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const uint2& a, const unsigned int b, const unsigned int c);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const unsigned int a, const uint2& b, const unsigned int c);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const unsigned int a, const unsigned int b, const uint2& c);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const uint2& a, const uint2& b);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const uint3& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 make_uint4(const unsigned int a, const uint3& b);
CU_INLINE CU_HOST_DEVICE bool operator==(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE void operator++(uint4& a);
CU_INLINE CU_HOST_DEVICE void operator+=(uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator+=(uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator+(const uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 operator+(const unsigned int a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator+(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE void operator--(uint4& a);
CU_INLINE CU_HOST_DEVICE void operator-=(uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator-=(uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator-(const uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 operator-(const unsigned int a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator-(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE void operator*=(uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator*=(uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator*(const uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 operator*(const unsigned int a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator*(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE void operator/=(uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE void operator/=(uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator/(const uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 operator/(const unsigned int a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 operator/(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 min(const uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 min(const unsigned int a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 min(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 max(const uint4& a, const unsigned int b);
CU_INLINE CU_HOST_DEVICE uint4 max(const unsigned int a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 max(const uint4& a, const uint4& b);
CU_INLINE CU_HOST_DEVICE uint4 clamp(const uint4& a, const unsigned int x, const unsigned int y);
CU_INLINE CU_HOST_DEVICE uint4 clamp(const uint4& a, const uint4& x, const uint4& y);
CU_INLINE CU_HOST_DEVICE unsigned int dot(const uint4& a, const uint4& b);

CU_INLINE CU_HOST_DEVICE float2 make_float2(const int2& a);
CU_INLINE CU_HOST_DEVICE float2 make_float2(const uint2& a);
CU_INLINE CU_HOST_DEVICE float2 make_float2(const float a);
CU_INLINE CU_HOST_DEVICE float2 make_float2(const float3& a);
CU_INLINE CU_HOST_DEVICE float2 make_float2(const float4& a);
CU_INLINE CU_HOST_DEVICE bool operator==(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE void operator++(float2& a);
CU_INLINE CU_HOST_DEVICE void operator+=(float2& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator+=(float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator+(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float2 operator+(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator+(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE void operator--(float2& a);
CU_INLINE CU_HOST_DEVICE void operator-=(float2& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator-=(float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator-(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 operator-(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float2 operator-(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator-(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE void operator*=(float2& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator*=(float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator*(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float2 operator*(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator*(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE void operator/=(float2& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator/=(float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator/(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float2 operator/(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 operator/(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 fabsf(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 fminf(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float2 fminf(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 fminf(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 fmaxf(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float2 fmaxf(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 fmaxf(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float2 floorf(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 ceilf(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 roundf(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 sign(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 clamp(const float2& a, const float x, const float y);
CU_INLINE CU_HOST_DEVICE float2 clamp(const float2& a, const float2& x, const float2& y);
CU_INLINE CU_HOST_DEVICE float dot(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float length(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 normalize(const float2& a);
CU_INLINE CU_HOST_DEVICE float2 reflect(const float2& a, const float2& n);
CU_INLINE CU_HOST_DEVICE float2 lerp(const float2 a, const float2 b, const float t);
CU_INLINE CU_HOST_DEVICE float2 bilerp(const float2 a00, const float2 a10, const float2 a01, const float2 a11, const float u, const float v);

CU_INLINE CU_HOST_DEVICE float3 make_float3(const int3& a);
CU_INLINE CU_HOST_DEVICE float3 make_float3(const uint3& a);
CU_INLINE CU_HOST_DEVICE float3 make_float3(const float a);
CU_INLINE CU_HOST_DEVICE float3 make_float3(const float2& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 make_float3(const float a, const float2& b);
CU_INLINE CU_HOST_DEVICE float3 make_float3(const float4& a);
CU_INLINE CU_HOST_DEVICE bool operator==(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE void operator++(float3& a);
CU_INLINE CU_HOST_DEVICE void operator+=(float3& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator+=(float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator+(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 operator+(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator+(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE void operator--(float3& a);
CU_INLINE CU_HOST_DEVICE void operator-=(float3& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator-=(float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator-(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 operator-(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 operator-(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator-(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE void operator*=(float3& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator*=(float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator*(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 operator*(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator*(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE void operator/=(float3& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator/=(float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator/(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 operator/(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 operator/(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 fabsf(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 fminf(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 fminf(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 fminf(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 fmaxf(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float3 fmaxf(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 fmaxf(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 floorf(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 ceilf(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 roundf(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 sign(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 clamp(const float3& a, const float x, const float y);
CU_INLINE CU_HOST_DEVICE float3 clamp(const float3& a, const float3& x, const float3& y);
CU_INLINE CU_HOST_DEVICE float dot(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float length(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 normalize(const float3& a);
CU_INLINE CU_HOST_DEVICE float3 cross(const float3& a, const float3& b);
CU_INLINE CU_HOST_DEVICE float3 reflect(const float3& a, const float3& n);
CU_INLINE CU_HOST_DEVICE float3 lerp(const float3 a, const float3 b, const float t);
CU_INLINE CU_HOST_DEVICE float3 bilerp(const float3 a00, const float3 a10, const float3 a01, const float3 a11, const float u, const float v);

CU_INLINE CU_HOST_DEVICE float4 make_float4(const int4& a);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const uint4& a);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float a);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float2& a, const float b, const float c);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float a, const float2& b, const float c);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float a, const float b, const float2& c);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float2& a, const float2& b);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float3& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 make_float4(const float a, const float3& b);
CU_INLINE CU_HOST_DEVICE bool operator==(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE bool operator!=(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE void operator++(float4& a);
CU_INLINE CU_HOST_DEVICE void operator+=(float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE void operator+=(float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 operator+(const float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 operator+(const float a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator+(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE void operator--(float4& a);
CU_INLINE CU_HOST_DEVICE void operator-=(float4& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator-=(float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator-(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 operator-(const float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 operator-(const float a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator-(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE void operator*=(float4& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator*=(float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator*(const float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 operator*(const float a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator*(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE void operator/=(float4& a, const float b);
CU_INLINE CU_HOST_DEVICE void operator/=(float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator/(const float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 operator/(const float a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 operator/(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 fabsf(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 fminf(const float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 fminf(const float a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 fminf(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 fmaxf(const float4& a, const float b);
CU_INLINE CU_HOST_DEVICE float4 fmaxf(const float a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 fmaxf(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float4 floorf(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 ceilf(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 roundf(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 sign(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 clamp(const float4& a, const float x, const float y);
CU_INLINE CU_HOST_DEVICE float4 clamp(const float4& a, const float4& x, const float4& y);
CU_INLINE CU_HOST_DEVICE float dot(const float4& a, const float4& b);
CU_INLINE CU_HOST_DEVICE float length(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 normalize(const float4& a);
CU_INLINE CU_HOST_DEVICE float4 reflect(const float4& a, const float4& n);
CU_INLINE CU_HOST_DEVICE float4 lerp(const float4 a, const float4 b, const float t);
CU_INLINE CU_HOST_DEVICE float4 bilerp(const float4 a00, const float4 a10, const float4 a01, const float4 a11, const float u, const float v);

#include "vector_extension.inl"
